Intermediate Algorithm Scripting: Sum All Odd Fibonacci Numbers
Given a positive integer num, return the sum of all odd Fibonacci numbers that are less than or equal to num.

The first two numbers in the Fibonacci sequence are 1 and 1. Every additional number in the sequence is the sum of the two previous numbers. The first six numbers of the Fibonacci sequence are 1, 1, 2, 3, 5 and 8.

For example, sumFibs(10) should return 10 because all odd Fibonacci numbers less than or equal to 10 are 1, 1, 3, and 5.




function sumFibs(num) {
  if (num <= 0) return 0;

  let fib = [1];
  let next = 1;
  let sumOdd = 1;
  for(let i = 0; next<=num; i++) {
    if(next%2!=0) {
      sumOdd += next;
    }
    fib.push(next);
    next = fib[i] + fib[i+1];
  }
  console.log('[ '+fib.join(', ')+' ]');
  console.log("Num: "+num+"  /  Sum: "+sumOdd);
  return sumOdd;
}
sumFibs(4);
sumFibs(1000);
sumFibs(75024);
sumFibs(75025);
